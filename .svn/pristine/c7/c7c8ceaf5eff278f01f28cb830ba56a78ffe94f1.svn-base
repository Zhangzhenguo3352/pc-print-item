// var service = "https://wx.yinzhimeng.com.cn";
var service = "https://127.0.0.1";
var dcpware = "https://dcp"; 
    
var tid;
ajaxPost(`${dcpware}/tid`, {}, function(data)
{
    console.log("tid: " + tid);
    tid = data.tid;
});

if (!tid)
{
    error("无法读取设备ID");
    tid = "001";// todo: delete temporary code.
};

var price;
ajaxPost(`${service}/print/price`, {
    "tid" : tid
}, function(data)
{
    price = data;
    console.log('price: ' + price);
});

if (!price)
{
    error("无法读取定价");
};

var is_usb = false || !!sessionStorage.getItem('is_usb');

var usb_parent_dir = ''; // 上级目录
var usb_current_dir = ''; // 当前目录
var left_files = []; // 当前左侧文件列表
var right_files_to_print = []; // 当前右侧带打印文件列表，hash作为下标进行索引

function showImgFn(item) {
    var imgElement = ''
    if(is_usb) {
        imgElement = `${item.directory ? `<img src="./assets/folder.png" style="width:70px;height:auto" />` : `<img src="./assets/${item.ext}.png" style="width:70px;height:auto" />` }`
    } else {
        imgElement = `${fileNameCompare(item.ext) ? `<img src="${item.url}" title="${item.name}" style="height: auto"/>`: `<img src="./assets/folder.png" style="width:70px;height:auto" />`}`
    }
    return imgElement;
}

// 从U盘读取文件
function load_usb_files(callback, dir)
{
    ajaxPost(`${dcpware}/getUsbFile`, {url : dir || ""}, function(data)
    {
        usb_parent_dir = data.data.parentDir;
        usb_current_dir = data.data.thisDir;
        
        left_files = data.data.fileList;
        
        callback(data.data.fileList);
    });
}

// 从云端读物文件
function load_cloud_files(callback)
{
    ajaxPost(`${service}/userFile/fileList`, {}, function(data)
    {
        left_files = data.data;
        callback(data.data);
    });
}

// 读取文件
function load_files(callback, dir)
{
    is_usb ? load_usb_files(callback, dir) : load_cloud_files(callback);
}

// 选中了左侧文件，如果是目录则进入子目录，如果是文件则加入右侧待打印文件列表
function add(element)
{
    var index = $(element).attr('index');
    var file = left_files[index];
    
    file.directory ? 
        load_files(render_left_files_callback, left_files[index].url) : 
        add_to_right(file);
}

// 加入右侧待打印文件列表
function add_to_right(file)
{
    // avoid duplication
    if(right_files_to_print[file.hash])
    {
        console.log(`${file.name} was added already.`);
        return;
    }

    console.log(`add ${file.name} to right`);
    
    file.copies = 1;
    file.config = '00,10,20'; // 任何文件默认为 A4/单面/黑白
    file.subtotal = file.copies * price[file.config];
    
    right_files_to_print[file.hash] = file;
    
    // find the template
    var template = $('#right_list').find('li').eq(0);
    template.attr('id', file.hash);
    
    $('.listBox').append(template.prop("outerHTML"));
    
    // clear template's temporary index attribute
    $('#right_list').find('li').eq(0).removeAttr('id');
    
    $(`#${file.hash} .title h2>span`).text(`${file.name}（${file.pages}页）`);
    $(`#${file.hash} div>div>span`).text(fen2Yuan(file.subtotal));

    // it's show time
    $('#right_list').find('.liBox').last().show();
    
    update_total();
}

// 从右侧待打印文件列表中删除
function delete_from_right(element)
{
    element = $(element).parents(".liBox");
    var index = element.attr('id');
    
    element.remove();
    right_files_to_print[index] = false; // disable this file.
    
    update_total();
    
    console.log("delete from right.");
}

// 更新单个文件打印配置
function update_config(element)
{
    var index = $(element).parents(".liBox").attr('id');
    var html = $(`#${index}`).html(); // save 
    
    $(element).parent().children("li").removeClass("active");
    $(element).addClass("active");
    
    var configs = $(`#${index} .active`);
    
    var config = "";
    config += configs.eq(2).attr('value') + ",";
    config += configs.eq(0).attr('value') + ",";
    config += configs.eq(1).attr('value');
        
    if(!price[config])
    {
        sweetAlert("还不能这样打印哦");
        $(`#${index}`).html(html); // restore
        return;
    }
    
    var configText = "";
    configText += configs.eq(2).text() + "/";
    configText += configs.eq(0).text() + "/";
    configText += configs.eq(1).text();
    
    $(`#${index} .clickSet`).text(configText);
    
    console.log(config + '->' + configText);
    
    var file = right_files_to_print[index];
    file.config = config;
    
    update_subtotal(element);
}

// 更新单个文件打印份数
function update_copies(element, n)
{
    var index = $(element).parents(".liBox").attr('id');
    var file = right_files_to_print[index];
    
    if(!file)
    {
        console.log(`error: file ${index} should be invisable.`);
        return;
    }
    
    if(file.copies==0 && n==-1)
    {
        return;
    }
    
    file.copies += n;
    
    if(file.copies==0)
    {
        $(`#${index} .addAndRemove div`).addClass('less disabled');
    }
    else
    {
        $(`#${index} .addAndRemove div`).removeClass('less disabled');
    }
    
    $(`#${index} .num.printQuantity`).html(file.copies);
    
    update_subtotal(element);
}

// 更新单个文件价格小计
function update_subtotal(element)
{
    var index = $(element).parents(".liBox").attr('id');
    var file = right_files_to_print[index];
    
    file.subtotal = file.copies * price[file.config];
    
    $(`#${index} div>div>span`).text(fen2Yuan(file.subtotal));
    
    console.log("todo: update subtotal.");
    update_total();
}

function get_files_to_print()
{
    var files_to_print = [];
    
    for(index in right_files_to_print)
    {
        var file = right_files_to_print[index];
        if(file && file.copies>0)
        {
            files_to_print.push(file);
        }
    }
    
    return files_to_print;
}

// 更新价格总计
function update_total()
{
    var files_to_print = get_files_to_print();
    var total = 0;
    
    for(var file of files_to_print)
    {
        total += file.subtotal;
    }
    
    $('.paymentAmount').html(fen2Yuan(total));
    
    files_to_print.length >0 ? $('#total').show() : $('#total').hide();
    
    $('#submit > div').attr('class', total > 0 ? 'submit' : 'submit active');
    
    console.log("total=" + total);
    
    return total;
}

// 显示支付二维码
function show_payment()
{
    var files = get_files_to_print();
    var data =  {
        files: files,
        tid : tid, 
        isUSB : is_usb ? "1" : "0",
        total : parseFloat($('.paymentAmount').eq(0).text()) * 100        
    };
    
    ajaxPost(`${service}/payment/pay`, data, function(data)
    {
        $('#payment img').attr('src', `data:image/png;base64,${data.data}`);
    });
    
    $('#payment').show();
    
    check_payment();
}

// 检查是否已经支付
function check_payment()
{
    ajaxPost(`${service}/payment/query`, {timeout : 60}, function(data)
    {
        console.log("payed!");
        go_print();
    });
}

// 提交打印
function go_print() 
{
    var files = get_files_to_print();
    ajaxPost(`${dcpware}/print`, files, function(data)
    {
        if(data.code > 0)
        {
            sweetAlert(data.message);
            return;
        }
        
        sessionStorage.setItem('is_printing', true);
        sessionStorage.setItem('files', files);
        
        // sessionStorage.setItem('pages', data.pages);
        
        // window.location.href = './waiting.html';
    });
}

// 显示左侧文件列表
function render_left_files_callback(data)
{
    $('#leftBox').html('');
    
    if(!data)
    {
        console.log('error: call render_left_files_callback with empty data.');
        return;
    }
    
    data.map((item, index) => 
    {
        item.index = index;
        if(item.directory || checkoutFileFormat(item.ext))
        {
            var time = $.formatDateTime('yy-mm-dd hh-ii', new Date(item.createTime));
            $('#leftBox').append(`
                <li index=${index} class="canBeUsed ${item.directory? 'File' : 'noFile'}" onclick="add(this);return false;">
                    <div class="imgBox">
                        ${showImgFn(item)}
                    </div>
                    <div>
                        <h2 title=${item.name}>${InterceptionString(item.name, 20)}</h2>
                        <div>
                            <span>${time}</span>
                            <span style="padding-right: 0px">${item.directory ? "": readableFileSize(item.size )}</span>
                        </div>
                    </div>
                    <div class="x_add"></div>
                </li>`);
        }
    });
}

$(function() 
{
    load_files(render_left_files_callback);
    
    $('#back').on('click', function()
    {
        console.log(usb_parent_dir);
        load_files(render_left_files_callback, usb_parent_dir);
    });

    $('#refresh').on('click', function()
    {
        console.log(usb_current_dir);
        load_files(render_left_files_callback, usb_current_dir);
    });

     // 安全退出
    $('#dropOut').on('click', function()
    {
        console.log("I'm logging out.");
        
        ajaxPost(`${dcpware}/logout`);
        ajaxPost(`${service}/user/logout`);
        
        window.location.href = is_usb ? './prompt-take-usb.html' : '/';
    });    
});